# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Cache
        id: ccache
        uses: actions/cache@v4
        with:
          path: .ccache
          key: ${{ runner.os }}-ccache

      - run: |
          mkdir C:\ab

          git clone https://github.com/m-ab-s/media-autobuild_suite C:\ab

          mkdir .ccache

          mkdir "C:\ab\msys64/home/$env:USERNAME/.ccache"

          Copy-Item -Path ".ccache" -Destination "C:\ab\msys64/home/$env:USERNAME/.ccache" -Recurse

      - shell: cmd
        run: |
          cd /d C:\ab

          dir

          mkdir build

          echo arch=1 >> build\media-autobuild_suite.ini
          echo license2=1 >> build\media-autobuild_suite.ini
          echo standalone=2 >> build\media-autobuild_suite.ini
          echo vpx2=1 >> build\media-autobuild_suite.ini
          echo aom=1 >> build\media-autobuild_suite.ini
          echo rav1e=1 >> build\media-autobuild_suite.ini
          echo dav1d=1 >> build\media-autobuild_suite.ini
          echo libavif=1 >> build\media-autobuild_suite.ini
          echo jpegxl=1 >> build\media-autobuild_suite.ini
          echo x2643=4 >> build\media-autobuild_suite.ini
          echo x2652=1 >> build\media-autobuild_suite.ini
          echo other265=1 >> build\media-autobuild_suite.ini
          echo svthevc=1 >> build\media-autobuild_suite.ini
          echo xvc=1 >> build\media-autobuild_suite.ini
          echo vvc=1 >> build\media-autobuild_suite.ini
          echo uvg266=1 >> build\media-autobuild_suite.ini
          echo vvenc=1 >> build\media-autobuild_suite.ini
          echo vvdec=1 >> build\media-autobuild_suite.ini
          echo svtav1=1 >> build\media-autobuild_suite.ini
          echo svtvp9=1 >> build\media-autobuild_suite.ini
          echo flac=1 >> build\media-autobuild_suite.ini
          echo fdkaac=1 >> build\media-autobuild_suite.ini
          echo faac=1 >> build\media-autobuild_suite.ini
          echo exhale=2 >> build\media-autobuild_suite.ini
          echo mediainfo=2 >> build\media-autobuild_suite.ini
          echo soxB=2 >> build\media-autobuild_suite.ini
          echo ffmpegB2=1 >> build\media-autobuild_suite.ini
          echo ffmpegUpdate=1 >> build\media-autobuild_suite.ini
          echo ffmpegChoice=4 >> build\media-autobuild_suite.ini
          echo mp4box=2 >> build\media-autobuild_suite.ini
          echo rtmpdump=2 >> build\media-autobuild_suite.ini
          echo mplayer2=2 >> build\media-autobuild_suite.ini
          echo mpv=2 >> build\media-autobuild_suite.ini
          echo vlc=2 >> build\media-autobuild_suite.ini
          echo bmx=2 >> build\media-autobuild_suite.ini
          echo curl=1 >> build\media-autobuild_suite.ini
          echo ffmbc=2 >> build\media-autobuild_suite.ini
          echo cyanrip2=2 >> build\media-autobuild_suite.ini
          echo ripgrep=2 >> build\media-autobuild_suite.ini
          echo jq=2 >> build\media-autobuild_suite.ini
          echo jo=2 >> build\media-autobuild_suite.ini
          echo dssim=2 >> build\media-autobuild_suite.ini
          echo avs2=1 >> build\media-autobuild_suite.ini
          echo dovitool=2 >> build\media-autobuild_suite.ini
          echo hdr10plustool=2 >> build\media-autobuild_suite.ini
          echo CC=1 >> build\media-autobuild_suite.ini
          echo cores=%NUMBER_OF_PROCESSORS% >> build\media-autobuild_suite.ini
          echo deleteSource=2 >> build\media-autobuild_suite.ini
          echo strip=1 >> build\media-autobuild_suite.ini
          echo pack=2 >> build\media-autobuild_suite.ini
          echo logging=2 >> build\media-autobuild_suite.ini
          echo updateSuite=2 >> build\media-autobuild_suite.ini
          echo timeStamp=1 >> build\media-autobuild_suite.ini
          
          :: TODO
          set ccacheINI=1
          
          :: TODO
          set noMinttyINI=1

          media-autobuild_suite.bat

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          path: 'C:\ab'
          name: 'cdrive'
          compression-level: 9 # maximum compression

      # local[32|64]\bin-(audio|global|video)
      - run: Copy-Item -Path "C:\ab\local32" -Destination "$env:GITHUB_WORKSPACE\32" -Recurse
        if: always()
      - run: Copy-Item -Path "C:\ab\local64" -Destination "$env:GITHUB_WORKSPACE\64" -Recurse
        if: always()

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          path: "{{ env.GITHUB_WORKSPACE }}"
          name: workspace
          compression-level: 9 # maximum compression

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          path: "{{ env.GITHUB_WORKSPACE }}\\64"
          name: workspace-64
          compression-level: 9 # maximum compression

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          path: "{{ env.GITHUB_WORKSPACE }}\\32"
          name: workspace-32
          compression-level: 9 # maximum compression

      - run: |
          Copy-Item -Path "msys64/home/$env:USERNAME/.ccache" -Destination "$env:GITHUB_WORKSPACE/.ccache" -Recurse
